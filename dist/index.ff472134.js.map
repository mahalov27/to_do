{"mappings":"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","sources":["src/js/dataSetting/dataSetting.js","src/js/toDoControl/toDoControl.js","src/js/templates/templatesToDoItem.js","src/js/createToDoList/createToDoList.js","src/js/pagination/settingPagination/settingsPagination.js","src/js/templates/templatePagination.js","src/js/pagination/pagination/pagination.js","src/js/getId/getId.js","src/js/createToDoItems/createToDoItems.js","src/js/form/form.js","src/js/toolBar/toolBar.js","src/js/templates/templatesToolBar.js","src/js/header/header.js"],"sourcesContent":["export let toDos = {};\r\n\r\nexport const createTemplateForLocalStorage = () => {\r\n  const toDosTemplate = {\r\n    toDo: [],\r\n    inProgress: [],\r\n    did: [],\r\n    search: [],\r\n  };\r\n  if (localStorage.getItem('toDos') === null) {\r\n    localStorage.setItem('toDos', JSON.stringify(toDosTemplate));\r\n  }\r\n  toDos = JSON.parse(localStorage.getItem('toDos'));\r\n};\r\n\r\nexport const getStatusProgress = () => {\r\n  toDos.inProgress = toDos.toDo.filter(toDo => toDo.status === 'inProgress');\r\n  localStorage.setItem('toDos', JSON.stringify(toDos));\r\n};\r\n\r\nexport const saveActiveInset = value => {\r\n  localStorage.setItem('inset', JSON.stringify(value));\r\n};\r\n\r\nexport const checkInset = () => {\r\n  let checkedInset = [];\r\n  const savesInset = JSON.parse(localStorage.getItem('inset'));\r\n  if (savesInset === 'toDo') {\r\n    checkedInset = toDos.toDo;\r\n  }\r\n  if (savesInset === 'inProgress') {\r\n    checkedInset = toDos.inProgress;\r\n  }\r\n  if (savesInset === 'did') {\r\n    checkedInset = toDos.did;\r\n  }\r\n  if (savesInset === 'search') {\r\n    checkedInset = toDos.search;\r\n  }\r\n  return checkedInset;\r\n};\r\n","import { createToDoList } from '../createToDoList/createToDoList.js';\r\nimport { toDos, getStatusProgress } from '../dataSetting/dataSetting.js';\r\nimport { deletePagination } from '../pagination/pagination/pagination.js';\r\n\r\nconst getActions = event => {\r\n  const { action } = event.target.dataset;\r\n\r\n  action === 'delete-btn' && deleteToDo(event.target);\r\n  action === 'in-progress-btn' && toInProgress(event.target);\r\n  action === 'complete-btn' && toDid(event.target);\r\n};\r\n\r\nconst getId = eventTarget => {\r\n  const cardItem = eventTarget.closest('.js-list-item');\r\n  const { id } = cardItem.dataset;\r\n\r\n  return id;\r\n};\r\n\r\nconst deleteToDo = eventTarget => {\r\n  const id = getId(eventTarget);\r\n\r\n  if (JSON.parse(localStorage.getItem('inset')) !== 'did') {\r\n    toDos.toDo = [...toDos.toDo.filter(toDo => toDo.id !== id)];\r\n  } else {\r\n    toDos.did = [...toDos.did.filter(toDo => toDo.id !== id)];\r\n  }\r\n\r\n  localStorage.setItem('toDos', JSON.stringify(toDos));\r\n  deletePagination();\r\n  getStatusProgress();\r\n  createToDoList(true);\r\n};\r\n\r\nconst toInProgress = eventTarget => {\r\n  const id = getId(eventTarget);\r\n  toDos.toDo.forEach(toDo => {\r\n    if (toDo.id === id) {\r\n      toDo.status = 'inProgress';\r\n      eventTarget.closest('.list-item').classList.add('in-progress');\r\n      getStatusProgress();\r\n    }\r\n  });\r\n};\r\n\r\nconst toDid = eventTarget => {\r\n  const id = getId(eventTarget);\r\n  toDos.toDo.forEach(toDo => {\r\n    if (toDo.id === id) {\r\n      toDo.status = 'did';\r\n      toDos.did.push(toDo);\r\n      toDos.toDo = [...toDos.toDo.filter(toDo => toDo.id !== id)];\r\n      getStatusProgress();\r\n      createToDoList(true);\r\n    }\r\n  });\r\n};\r\n\r\nconst toDosControl = () => {\r\n  const actionBtns = document.querySelectorAll('.js-action-btns');\r\n\r\n  actionBtns.forEach(item => item.addEventListener('click', getActions));\r\n};\r\n\r\nexport default toDosControl;\r\n","export const templateToDoItem = ({ id, date, title, description, status }) => {\r\n  const classForStatus = 'in-progress';\r\n\r\n  return `\r\n      <li class=\"list-item js-list-item ${\r\n        status === 'inProgress' ? classForStatus : null\r\n      }\" data-id=\"${id}\">\r\n         <div class=\"list-item-title\">\r\n            <h2>${title}</h2>\r\n            <p>${date}</p>\r\n         </div>\r\n         <div class=\"list-item-description\">\r\n            <p>${description}</p>\r\n         </div>\r\n         <div class=\"js-action-btns\">\r\n            <button class=\"delete-btn\" data-action=\"delete-btn\">&#x2718</button>\r\n            <button class=\"in-progress-btn\" data-action=\"in-progress-btn\">&#10140</button>\r\n            <button class=\"complete-btn\" data-action=\"complete-btn\">&#x2714</button>\r\n         </div>\r\n      </li>\r\n   `;\r\n};\r\n\r\nexport const templateToDoItemDid = ({ id, title, description }) => {\r\n  return `\r\n         <li class=\"list-item-did js-list-item\" data-id=\"${id}\">\r\n            <div class=\"list-item-did-text\">\r\n               <div>\r\n                  <h2>${title}</h2>\r\n               </div>\r\n               <div class=\"list-item-did-discription\">\r\n                  <p>${description}</p>\r\n               </div>\r\n            </div>\r\n            <div class=\"js-action-btns\">\r\n               <button class=\"did-delete-btn\" data-action=\"delete-btn\">&#x2718</button>\r\n            </div>\r\n         </li>`;\r\n};\r\n","import {\r\n  filterIndexProductCard,\r\n  setPagination,\r\n} from '../pagination/pagination/pagination.js';\r\nimport toDosControl from '../toDoControl/toDoControl.js';\r\nimport {\r\n  templateToDoItem,\r\n  templateToDoItemDid,\r\n} from '../templates/templatesToDoItem.js';\r\n\r\nexport const createToDoList = withPagination => {\r\n  const listItems = document.querySelector('.toDo-list');\r\n  const filtered = filterIndexProductCard();\r\n  const markup = filtered.reduce((acc, item) => {\r\n    if (JSON.parse(localStorage.getItem('inset')) === 'did') {\r\n      return (acc += templateToDoItemDid(item));\r\n    }\r\n    if (JSON.parse(localStorage.getItem('inset')) !== 'did') {\r\n      return (acc += templateToDoItem(item));\r\n    }\r\n  }, '');\r\n\r\n  listItems.innerHTML = markup;\r\n  if (withPagination) {\r\n    setPagination();\r\n  }\r\n\r\n  toDosControl();\r\n};\r\n","import { checkInset } from \"../../dataSetting/dataSetting.js\";\r\n\r\n\r\nconst products = {\r\n   itemsPerPage: 6,\r\n   currentPage: 1,\r\n   getQuantity: function () {\r\n      return checkInset().length;\r\n   }\r\n};\r\nexport default products;\r\n","export const createPageNumber = (num, i, products) => {\r\n  const activePageNumber = 'activePage';\r\n\r\n  return `<li data-page=\"${num}\" class=\"${\r\n    num === products.currentPage ? activePageNumber : null\r\n  }\">${num}</li>`;\r\n};\r\n","import { checkInset } from '../../dataSetting/dataSetting.js';\r\nimport { createToDoList } from '../../createToDoList/createToDoList.js';\r\nimport products from '../settingPagination/settingsPagination.js';\r\nimport { createPageNumber } from '../../templates/templatePagination.js';\r\n\r\nconst paginationList = document.querySelector('.pagination-items');\r\nconst paginationDiv = document.querySelector('.pagination');\r\n\r\nexport const setPagination = () => {\r\n  const numberPage = Math.ceil(products.getQuantity() / products.itemsPerPage);\r\n  let paginationBlocks = '';\r\n\r\n  for (let i = 1; i <= numberPage; i += 1) {\r\n    paginationBlocks += createPageNumber(\r\n      i,\r\n      i === products.currentPage,\r\n      products\r\n    );\r\n  }\r\n  paginationList.innerHTML = paginationBlocks;\r\n\r\n  if (numberPage > 0) {\r\n    paginationDiv.classList.add('paginationActive');\r\n  } else {\r\n    paginationDiv.classList.remove('paginationActive');\r\n  }\r\n};\r\n\r\nexport const initPagination = () => {\r\n  paginationList.addEventListener('click', setPage);\r\n  document\r\n    .querySelectorAll('.js-arrow-btn')\r\n    .forEach(item => item.addEventListener('click', actionArrowBtns));\r\n\r\n  setPagination();\r\n};\r\n\r\nexport const filterIndexProductCard = () => {\r\n  const filter = checkInset().filter((_item, idx) => {\r\n    return (\r\n      idx >=\r\n        products.currentPage * products.itemsPerPage - products.itemsPerPage &&\r\n      idx < products.currentPage * products.itemsPerPage\r\n    );\r\n  });\r\n  return filter;\r\n};\r\n\r\nexport const deletePagination = () => {\r\n  const pagination = document.querySelector('.pagination-items');\r\n  const newPaginationLength = Math.ceil(\r\n    products.getQuantity() / products.itemsPerPage\r\n  );\r\n  if (\r\n    products.currentPage !== 1 &&\r\n    pagination.children.length !== newPaginationLength &&\r\n    pagination.children.length === products.currentPage\r\n  ) {\r\n    products.currentPage -= 1;\r\n  }\r\n};\r\n\r\nconst setPage = event => {\r\n  event.preventDefault();\r\n  if (event.target === event.currentTarget) {\r\n    return;\r\n  }\r\n  products.currentPage = Number(event.target.textContent);\r\n  const activePage = document.querySelector('.activePage');\r\n\r\n  activePage && activePage.classList.remove('activePage');\r\n\r\n  event.target.classList.add('activePage');\r\n  createToDoList();\r\n};\r\n\r\nconst actionArrowBtns = event => {\r\n  if (\r\n    event.target.dataset.arrow === 'next' &&\r\n    products.currentPage < paginationList.childNodes.length\r\n  ) {\r\n    products.currentPage += 1;\r\n  }\r\n  if (event.target.dataset.arrow === 'prev' && products.currentPage > 1) {\r\n    products.currentPage -= 1;\r\n  }\r\n\r\n  setPagination();\r\n  createToDoList(true);\r\n};\r\n","export const getId = (data) => {\r\n   const basicValue = {\r\n      arrayId: [],\r\n      min: 1000000000000,\r\n      max: 9999999999999,\r\n      id: 1,\r\n   };\r\n\r\n   data.toDo.forEach(idItem => {\r\n      basicValue.arrayId.push(idItem.id);\r\n   })\r\n\r\n   let testId = '';\r\n   let filter = ''\r\n\r\n   do {\r\n     const forId = basicValue.min - 0.5 + Math.random() * (basicValue.max - basicValue.min + 1);\r\n     testId = Math.floor(forId).toString();\r\n     filter = basicValue.arrayId.includes(testId);\r\n   } while (filter);\r\n\r\n   basicValue.id = testId;\r\n\r\n   return basicValue.id\r\n};\r\n","import { toDos } from '../dataSetting/dataSetting.js';\r\nimport { createToDoList } from '../createToDoList/createToDoList.js';\r\nimport { templateToDoItem } from '../templates/templatesToDoItem.js';\r\nimport { getId } from '../getId/getId.js';\r\n\r\nconst createToDoItems = () => {\r\n  const form = document.forms.itemCreateForm;\r\n  const titleOfTodo = form.elements.title;\r\n  const descriptionOfTodo = form.elements.description;\r\n  const listItems = document.querySelector('.toDo-list');\r\n  const date = new Date();\r\n\r\n  const toDoItem = {\r\n    id: getId(toDos),\r\n    date: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,\r\n    status: 'noStatus',\r\n    title: titleOfTodo.value,\r\n    description: descriptionOfTodo.value,\r\n  };\r\n  form.reset();\r\n\r\n  toDos.toDo.unshift(toDoItem);\r\n\r\n  const getData = JSON.parse(localStorage.getItem('toDos'));\r\n  getData.toDo.unshift(toDoItem);\r\n  localStorage.setItem('toDos', JSON.stringify(getData));\r\n\r\n  listItems.insertAdjacentHTML('afterbegin', templateToDoItem(toDoItem));\r\n  createToDoList(true);\r\n};\r\nexport default createToDoItems;\r\n","import createToDoItems from '../createToDoItems/createToDoItems.js';\r\n\r\nconst formToDo = document.querySelector('.js-form-toDo');\r\n\r\nexport const openFormTodo = () => {\r\n  const close = document.querySelector('.close');\r\n  close && formToDo.classList.remove('close');\r\n  formToDo.classList.remove('hidden');\r\n};\r\nexport const closeFormTodo = () => {\r\n  formToDo.classList.add('hidden');\r\n};\r\n\r\nexport const actionFormToDo = event => {\r\n  event.preventDefault();\r\n\r\n  if (event.target.nodeName !== 'BUTTON') {\r\n    return;\r\n  }\r\n  if (event.target.dataset.action === 'cancel') {\r\n    formToDo.classList.add('close');\r\n    setTimeout(closeFormTodo, 300);\r\n    return;\r\n  }\r\n  if (event.target.dataset.action === 'add') {\r\n    createToDoItems();\r\n    formToDo.classList.add('close');\r\n    setTimeout(closeFormTodo, 300);\r\n  }\r\n};\r\n\r\nformToDo.addEventListener('click', actionFormToDo);\r\n","import {\r\n  templateToolBarElementToDo,\r\n  templateToolBarElementInprogress,\r\n  templateToolBarElementDid,\r\n} from '../templates/templatesToolBar.js';\r\nimport { openFormTodo, closeFormTodo } from '../form/form.js';\r\nimport { toDos } from '../dataSetting/dataSetting.js';\r\nimport { createToDoList } from '../createToDoList/createToDoList.js';\r\n\r\nconst toolBarBlock = document.querySelector('.tool_bar');\r\n\r\nexport const startToolBar = () => {\r\n  toolBarBlock.innerHTML = templateToolBarElementToDo();\r\n  toolBarElements();\r\n};\r\n\r\nexport const switchToolBar = eventTarget => {\r\n  const { action } = eventTarget.dataset;\r\n\r\n  if (action === 'toDo') {\r\n    toolBarBlock.innerHTML = templateToolBarElementToDo();\r\n  }\r\n  if (action === 'inProgress') {\r\n    toolBarBlock.innerHTML = templateToolBarElementInprogress();\r\n  }\r\n  if (action === 'did') {\r\n    toolBarBlock.innerHTML = templateToolBarElementDid();\r\n  }\r\n\r\n  closeFormTodo();\r\n  toolBarElements();\r\n};\r\n\r\nconst clearAllinDid = () => {\r\n  toDos.did = [...toDos.did.filter(toDo => toDo.status !== 'did')];\r\n  createToDoList(true);\r\n};\r\n\r\nconst search = event => {\r\n  localStorage.setItem('inset', JSON.stringify('search'));\r\n\r\n  const { value } = event.target;\r\n\r\n  if (event.target.name === 'searchToDo') {\r\n    toDos.search = [\r\n      ...toDos.toDo.filter(toDo => toDo.title.toLowerCase().includes(value)),\r\n    ];\r\n  }\r\n  if (event.target.name === 'searchIProgress') {\r\n    toDos.search = [\r\n      ...toDos.inProgress.filter(toDo =>\r\n        toDo.title.toLowerCase().includes(value)\r\n      ),\r\n    ];\r\n  }\r\n\r\n  createToDoList();\r\n  toDos.search = [];\r\n};\r\n\r\nconst toolBarElements = () => {\r\n  const buttonAdd = document.querySelector('.js-button-add');\r\n  const clearAllBtn = document.querySelector('.js-button-clear-all');\r\n  const searchInput = document.querySelector('.js-input-search');\r\n\r\n  buttonAdd && buttonAdd.addEventListener('click', openFormTodo);\r\n  clearAllBtn && clearAllBtn.addEventListener('click', clearAllinDid);\r\n  searchInput && searchInput.addEventListener('input', search);\r\n};\r\n","export const templateToolBarElementToDo = () => {\r\n  return `<div class=\"tool_bar_item tool_bar_item-todo\">\r\n            <button class=\"button_add js-button-add\">add to do</button>\r\n            <div class=\"block_search\">\r\n               <input type=\"text\" class=\"input_search js-input-search\" name=\"searchToDo\" data-search=\"input-search-toDo\" placeholder=\"search...\">\r\n               <img src=\"./images/icon-search.png\" alt=\"\">\r\n            </div>\r\n         </div>`;\r\n};\r\n\r\nexport const templateToolBarElementInprogress = () => {\r\n  return `<div class=\"tool_bar_item tool_bar_item-inprogress\">\r\n            <div class=\"block_search\">\r\n               <input type=\"text\" class=\"input_search js-input-search\" name=\"searchIProgress\" data-search=\"input-search-inProgress\" placeholder=\"search...\">\r\n               <img src=\"./images/icon-search.png\" alt=\"\">\r\n            </div>\r\n         </div>`;\r\n};\r\n\r\nexport const templateToolBarElementDid = () => {\r\n  return `<div class=\"tool_bar_item tool_bar_item-inprogress\">\r\n            <button class=\"button_add js-button-clear-all\">clear all</button>\r\n         </div>`;\r\n};\r\n","import products from '../pagination/settingPagination/settingsPagination.js';\r\nimport { createToDoList } from '../createToDoList/createToDoList.js';\r\nimport { saveActiveInset } from '../dataSetting/dataSetting.js';\r\nimport { switchToolBar, startToolBar } from '../toolBar/toolBar.js';\r\n\r\nconst navigation = document.querySelector('.nav');\r\n\r\nconst activeNavButton = event => {\r\n  event.preventDefault();\r\n  const activeButton = navigation.querySelector('.active');\r\n  if (event.target === event.currentTarget) {\r\n    return;\r\n  }\r\n  activeButton && activeButton.classList.remove('active');\r\n\r\n  event.target.classList.add('active');\r\n\r\n  actionMode(event.target);\r\n};\r\n\r\nconst checkMode = () => {\r\n  saveActiveInset(navigation.children[0].dataset.action);\r\n  startToolBar();\r\n  createToDoList(true);\r\n};\r\n\r\nconst actionMode = eventTarget => {\r\n  saveActiveInset(eventTarget.dataset.action);\r\n  products.currentPage = 1;\r\n  createToDoList(true);\r\n  switchToolBar(eventTarget);\r\n};\r\n\r\nconst header = () => {\r\n  checkMode();\r\n\r\n  navigation.addEventListener('click', activeNavButton);\r\n};\r\n\r\nexport default header;\r\n"],"names":["$e0cd4e87beebbb19$export$451239bbaed6f325","$e0cd4e87beebbb19$export$c39f11c0574212c5","inProgress","toDo","filter","status","localStorage","setItem","JSON","stringify","$e0cd4e87beebbb19$export$34df84f1faf109ae","value","$e0cd4e87beebbb19$export$8f85fff311fe8ace","checkedInset","savesInset","parse","getItem","did","search","$ac3648cd70a93d58$var$getActions","event","action","target","dataset","$ac3648cd70a93d58$var$deleteToDo","$ac3648cd70a93d58$var$toInProgress","$ac3648cd70a93d58$var$toDid","$ac3648cd70a93d58$var$getId","eventTarget","cardItem","closest","id","$049a595c8d38a903$export$bece1ff30d5e6646","$78e48df6e9403870$export$8901f65eba63ea28","forEach","classList","add","toDo1","push","$3d76b54695f964fa$export$873f5aa1da24cf62","date","title","description","withPagination","listItems","document","querySelector","markup","$049a595c8d38a903$export$86e96baefab16788","reduce","acc","item","$3d76b54695f964fa$export$50554ccb01ab3452","innerHTML","$049a595c8d38a903$export$347aea62317e2398","querySelectorAll","addEventListener","$0a7e1b1440a2a340$export$2e2bcd8739ae039","itemsPerPage","currentPage","getQuantity","length","$049a595c8d38a903$var$paginationList","$049a595c8d38a903$var$paginationDiv","numberPage","Math","ceil","paginationBlocks","i","num","remove","_item","idx","pagination","newPaginationLength","children","$049a595c8d38a903$var$setPage","preventDefault","currentTarget","Number","textContent","activePage","$049a595c8d38a903$var$actionArrowBtns","arrow","childNodes","$a183d7478672b210$export$218c8c3169c024d2","data","basicValue","arrayId","min","max","idItem","testId","forId","random","floor","toString","includes","$319f24b9f8306930$export$2e2bcd8739ae039","form","forms","itemCreateForm","titleOfTodo","elements","descriptionOfTodo","Date","toDoItem","getDate","getMonth","getFullYear","reset","unshift","getData","insertAdjacentHTML","$5070ba869c8e65a8$var$formToDo","$5070ba869c8e65a8$export$d9fa43307bf4b7ec","$5070ba869c8e65a8$export$ae9cd59470c0a5d0","nodeName","setTimeout","$46ff934c56b8a5d0$var$toolBarBlock","$46ff934c56b8a5d0$export$1a3a094e6972ca14","$46ff934c56b8a5d0$var$toolBarElements","$46ff934c56b8a5d0$var$clearAllinDid","$46ff934c56b8a5d0$var$search","name","toLowerCase","buttonAdd","clearAllBtn","searchInput","$5beae1408dee8e31$var$navigation","$5beae1408dee8e31$var$activeNavButton","activeButton","$5beae1408dee8e31$var$actionMode","$5beae1408dee8e31$var$checkMode"],"version":3,"file":"index.ff472134.js.map"}